{"ast":null,"code":"import _slicedToArray from\"/home/dsull29/Projects/trick-picker/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import tricksData from'../tricks.json';import Button from'@mui/material/Button';import Typography from'@mui/material/Typography';import Box from'@mui/material/Box';import Grid from'@mui/material/Grid';import Container from'@mui/material/Container';import TrickToggle from'./TrickToggle';import TrickCard from'./TrickCard';import TrickComboCard from'./TrickComboCard';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TrickPicker=function TrickPicker(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),trick=_useState2[0],setTrick=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),combo=_useState4[0],setCombo=_useState4[1];var _useState5=useState('poolTricks'),_useState6=_slicedToArray(_useState5,2),category=_useState6[0],setCategory=_useState6[1];var tricks=tricksData[category];var pickRandomTrick=function pickRandomTrick(){var randomTrick=getRandomTrick();setCombo([]);setTrick(randomTrick);};var pickCombo=function pickCombo(){var comboTricks=Array.from({length:3},function(){return getRandomTrick();});setTrick(null);setCombo(comboTricks);};var getRandomTrick=function getRandomTrick(){var randomTrick=tricks[Math.floor(Math.random()*tricks.length)];if(randomTrick.type==='R'){// pick a random number of repitions between 2 and 12\nrandomTrick.reps=Math.floor(Math.random()*10)+2;}else if(randomTrick.type==='T'){// pick a random number of seconds between 10 and 60 seconds, in increments of 5\nrandomTrick.seconds=Math.floor(Math.random()*11)*5+10;}return randomTrick;};var toggleTrickCategory=function toggleTrickCategory(){setCategory(function(prevCategory){return prevCategory==='poolTricks'?'trampolineTricks':'poolTricks';});setTrick(null);setCombo([]);};return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Grid,{container:true,direction:\"column\",justifyContent:\"center\",alignItems:\"center\",children:/*#__PURE__*/_jsxs(Box,{sx:{m:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h2\",gutterBottom:true,children:\"Trick Picker\"}),/*#__PURE__*/_jsx(TrickToggle,{toggleTrickCategory:toggleTrickCategory,currentCategory:category}),/*#__PURE__*/_jsx(Box,{sx:{mb:2},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:pickRandomTrick,children:\"Pick a Trick\"})}),/*#__PURE__*/_jsx(Box,{sx:{mb:2},children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",onClick:pickCombo,children:\"Pick a Combo\"})}),trick?/*#__PURE__*/_jsx(TrickCard,{trick:trick}):null,combo.map(function(comboTrick,i){return/*#__PURE__*/_jsx(TrickComboCard,{trick:comboTrick},i);})]})})});};export default TrickPicker;","map":{"version":3,"names":["React","useState","tricksData","Button","Typography","Box","Grid","Container","TrickToggle","TrickCard","TrickComboCard","jsx","_jsx","jsxs","_jsxs","TrickPicker","_useState","_useState2","_slicedToArray","trick","setTrick","_useState3","_useState4","combo","setCombo","_useState5","_useState6","category","setCategory","tricks","pickRandomTrick","randomTrick","getRandomTrick","pickCombo","comboTricks","Array","from","length","Math","floor","random","type","reps","seconds","toggleTrickCategory","prevCategory","children","container","direction","justifyContent","alignItems","sx","m","variant","gutterBottom","currentCategory","mb","color","onClick","map","comboTrick","i"],"sources":["/home/dsull29/Projects/trick-picker/src/components/TrickPicker.js"],"sourcesContent":["import React, { useState } from 'react';\nimport tricksData from '../tricks.json';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport TrickToggle from './TrickToggle';\nimport TrickCard from './TrickCard';\nimport TrickComboCard from './TrickComboCard';\n\nconst TrickPicker = () => {\n  const [trick, setTrick] = useState(null);\n  const [combo, setCombo] = useState([]);\n  const [category, setCategory] = useState('poolTricks');\n\n  const tricks = tricksData[category];\n\n  const pickRandomTrick = () => {\n    const randomTrick = getRandomTrick();\n    setCombo([]);\n    setTrick(randomTrick);\n  };\n\n  const pickCombo = () => {\n    const comboTricks = Array.from({ length: 3 }, () => getRandomTrick());\n    setTrick(null);\n    setCombo(comboTricks);\n  }\n\n  const getRandomTrick = () => {\n    const randomTrick = tricks[Math.floor(Math.random() * tricks.length)];\n    if (randomTrick.type === 'R') {\n      // pick a random number of repitions between 2 and 12\n      randomTrick.reps = Math.floor(Math.random() * 10) + 2;\n    } else if (randomTrick.type === 'T') {\n      // pick a random number of seconds between 10 and 60 seconds, in increments of 5\n      randomTrick.seconds = Math.floor(Math.random() * 11) * 5 + 10;\n    }\n    return randomTrick;\n  }\n\n  const toggleTrickCategory = () => {\n    setCategory(prevCategory => prevCategory === 'poolTricks' ? 'trampolineTricks' : 'poolTricks');\n    setTrick(null);\n    setCombo([]);\n  }\n\n  return (\n    <Container>\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Box sx={{ m: 4 }}>\n          <Typography variant=\"h2\" gutterBottom>Trick Picker</Typography>\n          <TrickToggle toggleTrickCategory={toggleTrickCategory} currentCategory={category} />\n          <Box sx={{ mb: 2 }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={pickRandomTrick}>Pick a Trick</Button>\n          </Box>\n          <Box sx={{ mb: 2 }}>\n            <Button variant=\"contained\" color=\"secondary\" onClick={pickCombo}>Pick a Combo</Button>\n          </Box>\n          {/* if trick then call TrickCard */}\n          {trick ? <TrickCard trick={trick} /> : null }\n          {/* if combo then map through and call TrickCard for each */}\n          {combo.map((comboTrick, i) => <TrickComboCard key={i} trick={comboTrick} />)}\n        </Box>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default TrickPicker;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}